{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../shared/libs/native-bridge.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","w","emitter","returnFunctions","setupWebViewJSBridge","callback","WKWebViewJavascriptBridge","WKWVJBCallbacks","webkit","messageHandlers","iOS_Native_InjectJavascript","postMessage","type","LiveCloudBridge","liveCloudNativeEventCallback","needReturn","payload","emit","bridge","registerHandler","callNative","method","waitResponse","params","Promise","resolve","reject","callHandler","JSON","parse","event","on","once","then","NativeBridge","connected","catch","info","this","playedTime","currM3u8Index","video","document","getElementById","connect","isLive","playFlv","playHls","ts","bindReturnFunc","getCurrPlayedTime","NodePlayer","load","flv","setScaleMode","setView","id","start","src","startPos","hls","destroy","undefined","Hls","startPosition","loadSource","attachMedia","play","playbackRate","speed","addEventListener","backgroundTimeupdate","currentTime"],"mappings":"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","file":"assets/js/app.2668dba2.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {TinyEmitter} from 'tiny-emitter';\n\n// eslint-disable-next-line\nconst w = window as any;\nconst emitter = new TinyEmitter();\n// eslint-disable-next-line\nconst returnFunctions = {} as Record<string, Function>;\n\n// eslint-disable-next-line\nconst setupWebViewJSBridge = function (callback: any) {\n    if (w.WKWebViewJavascriptBridge) { return callback(w.WKWebViewJavascriptBridge); }\n    if (w.WKWVJBCallbacks) { return w.WKWVJBCallbacks.push(callback); }\n    w.WKWVJBCallbacks = [callback];\n    w.webkit.messageHandlers.iOS_Native_InjectJavascript.postMessage(null);\n}\n\nlet type = \"none\";\nif (w.LiveCloudBridge) {\n    type = \"android\";\n\n    // eslint-disable-next-line\n    w.liveCloudNativeEventCallback = (data: any) => {\n        if (data.needReturn) {\n            return returnFunctions[data.name](data.payload);\n        } else {\n            emitter.emit(data.name, data.payload);\n        }\n    }\n\n} else if (w.webkit?.messageHandlers?.iOS_Native_InjectJavascript) {\n    type = \"ios\";\n    // eslint-disable-next-line\n    setupWebViewJSBridge((bridge: any) => {\n        // eslint-disable-next-line\n        bridge.registerHandler('liveCloudNativeEventCallback', (data: any) => {\n            emitter.emit(data.name, data.payload);\n        })\n    })\n}\n\ninterface EventCallbackPayload {\n    [key: string]: unknown;\n}\n\ninterface EventCallbackFunc {\n    (payload: EventCallbackPayload): void;\n}\n\nexport interface NativeDevice {\n    device: string;\n\n    osName: string;\n\n    osVersion: string;\n\n    network: string;\n\n    appName: string;\n\n    appVersion: string;\n\n    sdkVersion: number;\n\n    resolution: string;\n\n    x5Version: number;\n}\n\nconst callNative = <T>(method: string, waitResponse = true, params?: string): Promise<T> => {\n    return new Promise<T>((resolve, reject) => {\n        let result: T;\n        if (type === \"android\") {\n            if (params) {\n                result = w.LiveCloudBridge[method](params);\n            } else {\n                result = w.LiveCloudBridge[method]();\n            }\n            resolve(result);\n        } else if (type === \"ios\") {\n            // eslint-disable-next-line\n            setupWebViewJSBridge((bridge: any) => {\n                if (waitResponse) {\n                    bridge.callHandler(method, params, (payload: string) => {\n                        result = JSON.parse(payload);\n                        resolve(result);\n                    });\n                } else {\n                    bridge.callHandler(method, params, null);\n                    resolve(result);\n                }\n            })\n        } else {\n            reject(\"No bridge.\");\n        }\n    });\n}\n\nclass NativeBridge {\n\n    static connected = false;\n\n    static on(event: string, callback: EventCallbackFunc): void {\n        emitter.on(event, callback);\n    }\n\n    static once(event: string, callback: EventCallbackFunc): void {\n        emitter.once(event, callback);\n    }\n\n    // eslint-disable-next-line\n    static bindReturnFunc(event: string, callback: Function): void {\n        returnFunctions[event] = callback;\n    }\n\n    static connect(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            callNative(\"connect\", false)\n                .then(() => {\n                    NativeBridge.connected = true;\n                    resolve();\n                }).catch(() => {\n                    NativeBridge.connected = false;\n                    reject();\n                });\n        });\n    }\n\n    static fullscreen(): Promise<void> {\n        return callNative(\"fullscreen\", false);\n    }\n\n    static exit(): Promise<void> {\n        return callNative(\"exit\", false);\n    }\n\n    static getDeviceInfo(): Promise<NativeDevice> {\n        return callNative<NativeDevice>(\"getDeviceInfo\");\n    }\n\n    static playBackgroundStream(info: string): Promise<void> {\n        return callNative(\"playBackgroundStream\", false, info);\n    }\n\n    static backgroundTimeupdate(): Promise<void> {\n        return callNative(\"timeUpdate\", false);\n    }\n}\n\nexport default NativeBridge;\n","import NativeBridge from \"../../shared/libs/native-bridge\";\n\nclass PlayEngine {\n    private readonly video: HTMLMediaElement;\n    // eslint-disable-next-line\n    // @ts-ignore\n    private hls: Hls | undefined;\n    // eslint-disable-next-line\n    // @ts-ignore\n    private flv: NodePlayer | undefined;\n    // eslint-disable-next-line\n    private payload: any;\n    private playedTime: number;\n    private currM3u8Index: number;\n\n    constructor() {\n        this.playedTime = 0;\n        this.currM3u8Index = 0;\n        this.video = document.getElementById(\"background-player\") as HTMLMediaElement;\n\n        NativeBridge.connect()\n            .then(async () => {\n                NativeBridge.on(\"playStream\", async (payload) => {\n                    this.payload = payload;\n                    if (this.payload.isLive) {\n                        this.playFlv();\n                    } else {\n                        await this.playHls(this.payload.ts);\n                    }\n                });\n                NativeBridge.bindReturnFunc(\"getPlayedTime\", () => {\n                    this.getCurrPlayedTime();\n                    return this.playedTime;\n                });\n            })\n\n    }\n\n    playFlv() {\n        // eslint-disable-next-line\n        // @ts-ignore\n        NodePlayer.load(()=> {\n            // eslint-disable-next-line\n            // @ts-ignore\n            this.flv = new NodePlayer();\n            // this.flv.useMSE(true);\n            this.flv.setScaleMode(1);\n            this.flv.setView(this.video.id);\n            this.flv.start('https:' + this.payload.src[this.currM3u8Index]);\n        });\n    }\n\n    async playHls(startPos = 0) {\n        if (this.hls) {\n            this.hls.destroy();\n            this.hls = undefined;\n        }\n        // eslint-disable-next-line\n        // @ts-ignore\n        this.hls = new Hls({startPosition: startPos});\n        this.hls.loadSource('https:' + this.payload.src[this.currM3u8Index]);\n        this.hls.attachMedia(this.video);\n        await this.video.play();\n        this.video.playbackRate = this.payload.speed;\n        this.video.addEventListener(\"ended\", async () => {\n            if (this.currM3u8Index < (this.payload.src.length - 1)) {\n                this.getCurrPlayedTime();\n                this.currM3u8Index++;\n                await this.playHls();\n            }\n        });\n        this.video.addEventListener(\"timeupdate\", () => {\n            NativeBridge.backgroundTimeupdate();\n        });\n    }\n\n    getCurrPlayedTime() {\n        if (this.currM3u8Index === 0) {\n            this.playedTime = this.video.currentTime - this.payload.ts;\n        } else {\n            this.playedTime += this.video.currentTime;\n        }\n    }\n\n}\n\nexport default PlayEngine;\n\nnew PlayEngine()\n"],"sourceRoot":""}